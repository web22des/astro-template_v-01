---
// src/components/ThemeToggle.astro

import type { APIContext } from 'astro';

// Получаем контекст для TypeScript
const { cookies } = Astro as APIContext;
let initialTheme = 'light'; // значение по умолчанию

// Безопасное получение темы из cookie (пришлось отключить так как выдает предупреждение "Astro.request.headers` was used when rendering")
const cookieTheme = cookies.get('theme')?.value;
initialTheme = cookieTheme || 
                    (Astro.request.headers.get('sec-ch-prefers-color-scheme') === 'dark' ? 'dark' : 'light');
// Подключаем стили прямо в компоненте

---
<style lang="scss">
    @use '@styles/utils/_focus-visible.scss' as *;
  :root {
    // Анимация перехода
    --theme-transition: color 0.3s ease, background-color 0.3s ease;
  }

  .theme-toggle {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 30px;

    &__input {
      opacity: 0;
      width: 0;
      height: 0;
      position: absolute;
      &:focus-visible {
      + .theme-toggle__slider {
        outline: 2px solid var(--md-sys-color-primary);
        outline-offset: 3px;
        box-shadow: 0 0 0 3px rgba(var(--md-sys-color-primary-rgb), 0.3);
      }
    }
      &:checked + .theme-toggle__slider {
        background-color: var(--md-sys-color-primary-container  );
        
        &::before {
          transform: translateX(30px);
          content: "\e9d6"; // Иконка луны из IcoMoon
          color: var(--md-sys-color-on-primary-container);
        }
      }
    }
    &__slider {
      position: absolute;
      cursor: pointer;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: var(--md-sys-color-primary-container);
      transition: .4s;
      border-radius: 30px;
      display: flex;
      align-items: center;
      padding: 0 5px;

      &::before {
        position: absolute;
        content: "\e9d4"; // Иконка солнца из IcoMoon
        font-family: 'icomoon' !important;
        height: 24px;
        width: 24px;
        left: 3px;
        bottom: 3px;
        background-color: transparent;
        transition: .4s;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 14px;
        color: var(--md-sys-color-on-primary-container);
      }
    }
  }

  // Применяем плавные переходы для всех цветовых изменений
  body {
    transition: var(--theme-transition);
    
    &, * {
      transition: var(--theme-transition);
    }
  }
</style>

<script is:inline>
  (function() {
    // Функция для установки темы
    function setTheme(theme) {
      document.body.classList.remove('light', 'dark');
      document.body.classList.add(theme);
      localStorage.setItem('theme', theme);
      
      // Обновляем чекбокс
      const toggle = document.getElementById('theme-toggle');
      if (toggle) {
        toggle.checked = theme === 'dark';
      }
    }

    // Функция для определения начальной темы
    function initTheme() {
      // Проверяем классы на body
      if (document.body.classList.contains('light')) {
        return 'light';
      }
      if (document.body.classList.contains('dark')) {
        return 'dark';
      }
      
      // Проверяем localStorage
      const savedTheme = localStorage.getItem('theme');
      if (savedTheme) {
        return savedTheme;
      }
      
      // Проверяем системные настройки
      return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches 
        ? 'dark' 
        : 'light';
    }

    // Инициализация темы
    const currentTheme = initTheme();
    setTheme(currentTheme);

    // Обработчик переключения темы
    document.addEventListener('DOMContentLoaded', () => {
      const toggle = document.getElementById('theme-toggle');
      if (toggle) {
        toggle.checked = currentTheme === 'dark';
        
        toggle.addEventListener('change', (e) => {
          setTheme(e.target.checked ? 'dark' : 'light');
        });
      }
    });

    // Следим за изменениями системных настроек (если тема не выбрана явно)
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
      if (!localStorage.getItem('theme')) {
        setTheme(e.matches ? 'dark' : 'light');
      }
    });
  })();
</script>

<div class="theme-toggle">
  <input type="checkbox" id="theme-toggle" class="theme-toggle__input">
  <label for="theme-toggle" class="theme-toggle__slider"></label>
</div>